<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yyds.demo.profession.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.yyds.demo.profession.mapper.User" >
    <id column="userid" property="userid" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="userloginname" property="userloginname" jdbcType="VARCHAR" />
    <result column="userphone" property="userphone" jdbcType="VARCHAR" />
    <result column="userpassword" property="userpassword" jdbcType="VARCHAR" />
    <result column="userflag" property="userflag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    userid, username, userloginname, userphone, userpassword, userflag
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from USER
    where userid = #{userid,jdbcType=VARCHAR}
  </select>

  <select id="findUserBylogin" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    select
    <include refid="Base_Column_List" />
    from USER
    where userloginname = #{loginname} and userpassword = #{password}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from USER
    where userid = #{userid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yyds.demo.profession.mapper.User" >
    insert into USER (userid, username, userloginname, 
      userphone, userpassword, userflag
      )
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{userloginname,jdbcType=VARCHAR}, 
      #{userphone,jdbcType=VARCHAR}, #{userpassword,jdbcType=VARCHAR}, #{userflag,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yyds.demo.profession.mapper.User" >
    insert into USER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userid,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="userloginname != null" >
        userloginname,
      </if>
      <if test="userphone != null" >
        userphone,
      </if>
      <if test="userpassword != null" >
        userpassword,
      </if>
      <if test="userflag != null" >
        userflag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userloginname != null" >
        #{userloginname,jdbcType=VARCHAR},
      </if>
      <if test="userphone != null" >
        #{userphone,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null" >
        #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="userflag != null" >
        #{userflag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yyds.demo.profession.mapper.User" >
    update USER
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="userloginname != null" >
        userloginname = #{userloginname,jdbcType=VARCHAR},
      </if>
      <if test="userphone != null" >
        userphone = #{userphone,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null" >
        userpassword = #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="userflag != null" >
        userflag = #{userflag,jdbcType=INTEGER},
      </if>
    </set>
    where userid = #{userid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yyds.demo.profession.mapper.User" >
    update USER
    set username = #{username,jdbcType=VARCHAR},
      userloginname = #{userloginname,jdbcType=VARCHAR},
      userphone = #{userphone,jdbcType=VARCHAR},
      userpassword = #{userpassword,jdbcType=VARCHAR},
      userflag = #{userflag,jdbcType=INTEGER}
    where userid = #{userid,jdbcType=VARCHAR}
  </update>
</mapper>